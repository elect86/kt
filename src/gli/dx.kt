package gli

import gli.dx.D3dfmt.*
import gli.dx.Ddpf.*
import gli.dx.DxgiFormatDds.*
import gli.dx.DxgiFormatGli.*
import main.vec._4.Vec4i


/**
 * Created by elect on 09/10/16.
 */


fun GLI_MAKEFOURCC(ch0: Char, ch1: Char, ch2: Char, ch3: Char) = ch0.toInt() or (ch1.toInt() shl 8) or (ch2.toInt() shl 16) or (ch3.toInt() shl 24)


class dx {

    enum class D3dfmt(val i: Int) {

        D3DFMT_UNKNOWN(0),

        D3DFMT_R8G8B8(20),
        D3DFMT_A8R8G8B8(21),
        D3DFMT_X8R8G8B8(22),
        D3DFMT_R5G6B5(23),
        D3DFMT_X1R5G5B5(24),
        D3DFMT_A1R5G5B5(25),
        D3DFMT_A4R4G4B4(26),
        D3DFMT_R3G3B2(27),
        D3DFMT_A8(28),
        D3DFMT_A8R3G3B2(29),
        D3DFMT_X4R4G4B4(30),
        D3DFMT_A2B10G10R10(31),
        D3DFMT_A8B8G8R8(32),
        D3DFMT_X8B8G8R8(33),
        D3DFMT_G16R16(34),
        D3DFMT_A2R10G10B10(35),
        D3DFMT_A16B16G16R16(36),

        D3DFMT_A8P8(40),
        D3DFMT_P8(41),

        D3DFMT_L8(50),
        D3DFMT_A8L8(51),
        D3DFMT_A4L4(52),

        D3DFMT_V8U8(60),
        D3DFMT_L6V5U5(61),
        D3DFMT_X8L8V8U8(62),
        D3DFMT_Q8W8V8U8(63),
        D3DFMT_V16U16(64),
        D3DFMT_A2W10V10U10(67),

        D3DFMT_UYVY(GLI_MAKEFOURCC('U', 'Y', 'V', 'Y')),
        D3DFMT_R8G8_B8G8(GLI_MAKEFOURCC('R', 'G', 'B', 'G')),
        D3DFMT_YUY2(GLI_MAKEFOURCC('Y', 'U', 'Y', '2')),
        D3DFMT_G8R8_G8B8(GLI_MAKEFOURCC('G', 'R', 'G', 'B')),
        D3DFMT_DXT1(GLI_MAKEFOURCC('D', 'X', 'T', '1')),
        D3DFMT_DXT2(GLI_MAKEFOURCC('D', 'X', 'T', '2')),
        D3DFMT_DXT3(GLI_MAKEFOURCC('D', 'X', 'T', '3')),
        D3DFMT_DXT4(GLI_MAKEFOURCC('D', 'X', 'T', '4')),
        D3DFMT_DXT5(GLI_MAKEFOURCC('D', 'X', 'T', '5')),

        D3DFMT_ATI1(GLI_MAKEFOURCC('A', 'T', 'I', '1')),
        D3DFMT_AT1N(GLI_MAKEFOURCC('A', 'T', '1', 'N')),
        D3DFMT_ATI2(GLI_MAKEFOURCC('A', 'T', 'I', '2')),
        D3DFMT_AT2N(GLI_MAKEFOURCC('A', 'T', '2', 'N')),

        D3DFMT_BC4U(GLI_MAKEFOURCC('B', 'C', '4', 'U')),
        D3DFMT_BC4S(GLI_MAKEFOURCC('B', 'C', '4', 'S')),
        D3DFMT_BC5U(GLI_MAKEFOURCC('B', 'C', '5', 'U')),
        D3DFMT_BC5S(GLI_MAKEFOURCC('B', 'C', '5', 'S')),

        D3DFMT_ETC(GLI_MAKEFOURCC('E', 'T', 'C', ' ')),
        D3DFMT_ETC1(GLI_MAKEFOURCC('E', 'T', 'C', '1')),
        D3DFMT_ATC(GLI_MAKEFOURCC('A', 'T', 'C', ' ')),
        D3DFMT_ATCA(GLI_MAKEFOURCC('A', 'T', 'C', 'A')),
        D3DFMT_ATCI(GLI_MAKEFOURCC('A', 'T', 'C', 'I')),

        D3DFMT_POWERVR_2BPP(GLI_MAKEFOURCC('P', 'T', 'C', '2')),
        D3DFMT_POWERVR_4BPP(GLI_MAKEFOURCC('P', 'T', 'C', '4')),

        D3DFMT_D16_LOCKABLE(70),
        D3DFMT_D32(71),
        D3DFMT_D15S1(73),
        D3DFMT_D24S8(75),
        D3DFMT_D24X8(77),
        D3DFMT_D24X4S4(79),
        D3DFMT_D16(80),

        D3DFMT_D32F_LOCKABLE(82),
        D3DFMT_D24FS8(83),

        D3DFMT_L16(81),

        D3DFMT_VERTEXDATA(100),
        D3DFMT_INDEX16(101),
        D3DFMT_INDEX32(102),

        D3DFMT_Q16W16V16U16(110),

        D3DFMT_MULTI2_ARGB8(GLI_MAKEFOURCC('M', 'E', 'T', '1')),

        D3DFMT_R16F(111),
        D3DFMT_G16R16F(112),
        D3DFMT_A16B16G16R16F(113),

        D3DFMT_R32F(114),
        D3DFMT_G32R32F(115),
        D3DFMT_A32B32G32R32F(116),

        D3DFMT_CxV8U8(117),

        D3DFMT_DX10(GLI_MAKEFOURCC('D', 'X', '1', '0')),

        D3DFMT_GLI1(GLI_MAKEFOURCC('G', 'L', 'I', '1')),

        D3DFMT_FORCE_DWORD(0x7fffffff)
    }

    enum class DxgiFormatDds(val i: Int) {

        DXGI_FORMAT_UNKNOWN(0),
        DXGI_FORMAT_R32G32B32A32_TYPELESS(1),
        DXGI_FORMAT_R32G32B32A32_FLOAT(2),
        DXGI_FORMAT_R32G32B32A32_UINT(3),
        DXGI_FORMAT_R32G32B32A32_SINT(4),
        DXGI_FORMAT_R32G32B32_TYPELESS(5),
        DXGI_FORMAT_R32G32B32_FLOAT(6),
        DXGI_FORMAT_R32G32B32_UINT(7),
        DXGI_FORMAT_R32G32B32_SINT(8),
        DXGI_FORMAT_R16G16B16A16_TYPELESS(9),
        DXGI_FORMAT_R16G16B16A16_FLOAT(10),
        DXGI_FORMAT_R16G16B16A16_UNORM(11),
        DXGI_FORMAT_R16G16B16A16_UINT(12),
        DXGI_FORMAT_R16G16B16A16_SNORM(13),
        DXGI_FORMAT_R16G16B16A16_SINT(14),
        DXGI_FORMAT_R32G32_TYPELESS(15),
        DXGI_FORMAT_R32G32_FLOAT(16),
        DXGI_FORMAT_R32G32_UINT(17),
        DXGI_FORMAT_R32G32_SINT(18),
        DXGI_FORMAT_R32G8X24_TYPELESS(19),
        DXGI_FORMAT_D32_FLOAT_S8X24_UINT(20),
        DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS(21),
        DXGI_FORMAT_X32_TYPELESS_G8X24_UINT(22),
        DXGI_FORMAT_R10G10B10A2_TYPELESS(23),
        DXGI_FORMAT_R10G10B10A2_UNORM(24),
        DXGI_FORMAT_R10G10B10A2_UINT(25),
        DXGI_FORMAT_R11G11B10_FLOAT(26),
        DXGI_FORMAT_R8G8B8A8_TYPELESS(27),
        DXGI_FORMAT_R8G8B8A8_UNORM(28),
        DXGI_FORMAT_R8G8B8A8_UNORM_SRGB(29),
        DXGI_FORMAT_R8G8B8A8_UINT(30),
        DXGI_FORMAT_R8G8B8A8_SNORM(31),
        DXGI_FORMAT_R8G8B8A8_SINT(32),
        DXGI_FORMAT_R16G16_TYPELESS(33),
        DXGI_FORMAT_R16G16_FLOAT(34),
        DXGI_FORMAT_R16G16_UNORM(35),
        DXGI_FORMAT_R16G16_UINT(36),
        DXGI_FORMAT_R16G16_SNORM(37),
        DXGI_FORMAT_R16G16_SINT(38),
        DXGI_FORMAT_R32_TYPELESS(39),
        DXGI_FORMAT_D32_FLOAT(40),
        DXGI_FORMAT_R32_FLOAT(41),
        DXGI_FORMAT_R32_UINT(42),
        DXGI_FORMAT_R32_SINT(43),
        DXGI_FORMAT_R24G8_TYPELESS(44),
        DXGI_FORMAT_D24_UNORM_S8_UINT(45),
        DXGI_FORMAT_R24_UNORM_X8_TYPELESS(46),
        DXGI_FORMAT_X24_TYPELESS_G8_UINT(47),
        DXGI_FORMAT_R8G8_TYPELESS(48),
        DXGI_FORMAT_R8G8_UNORM(49),
        DXGI_FORMAT_R8G8_UINT(50),
        DXGI_FORMAT_R8G8_SNORM(51),
        DXGI_FORMAT_R8G8_SINT(52),
        DXGI_FORMAT_R16_TYPELESS(53),
        DXGI_FORMAT_R16_FLOAT(54),
        DXGI_FORMAT_D16_UNORM(55),
        DXGI_FORMAT_R16_UNORM(56),
        DXGI_FORMAT_R16_UINT(57),
        DXGI_FORMAT_R16_SNORM(58),
        DXGI_FORMAT_R16_SINT(59),
        DXGI_FORMAT_R8_TYPELESS(60),
        DXGI_FORMAT_R8_UNORM(61),
        DXGI_FORMAT_R8_UINT(62),
        DXGI_FORMAT_R8_SNORM(63),
        DXGI_FORMAT_R8_SINT(64),
        DXGI_FORMAT_A8_UNORM(65),
        DXGI_FORMAT_R1_UNORM(66),
        DXGI_FORMAT_R9G9B9E5_SHAREDEXP(67),
        DXGI_FORMAT_R8G8_B8G8_UNORM(68),
        DXGI_FORMAT_G8R8_G8B8_UNORM(69),
        DXGI_FORMAT_BC1_TYPELESS(70),
        DXGI_FORMAT_BC1_UNORM(71),
        DXGI_FORMAT_BC1_UNORM_SRGB(72),
        DXGI_FORMAT_BC2_TYPELESS(73),
        DXGI_FORMAT_BC2_UNORM(74),
        DXGI_FORMAT_BC2_UNORM_SRGB(75),
        DXGI_FORMAT_BC3_TYPELESS(76),
        DXGI_FORMAT_BC3_UNORM(77),
        DXGI_FORMAT_BC3_UNORM_SRGB(78),
        DXGI_FORMAT_BC4_TYPELESS(79),
        DXGI_FORMAT_BC4_UNORM(80),
        DXGI_FORMAT_BC4_SNORM(81),
        DXGI_FORMAT_BC5_TYPELESS(82),
        DXGI_FORMAT_BC5_UNORM(83),
        DXGI_FORMAT_BC5_SNORM(84),
        DXGI_FORMAT_B5G6R5_UNORM(85),
        DXGI_FORMAT_B5G5R5A1_UNORM(86),
        DXGI_FORMAT_B8G8R8A8_UNORM(87),
        DXGI_FORMAT_B8G8R8X8_UNORM(88),
        DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM(89),
        DXGI_FORMAT_B8G8R8A8_TYPELESS(90),
        DXGI_FORMAT_B8G8R8A8_UNORM_SRGB(91),
        DXGI_FORMAT_B8G8R8X8_TYPELESS(92),
        DXGI_FORMAT_B8G8R8X8_UNORM_SRGB(93),
        DXGI_FORMAT_BC6H_TYPELESS(94),
        DXGI_FORMAT_BC6H_UF16(95),
        DXGI_FORMAT_BC6H_SF16(96),
        DXGI_FORMAT_BC7_TYPELESS(97),
        DXGI_FORMAT_BC7_UNORM(98),
        DXGI_FORMAT_BC7_UNORM_SRGB(99),
        DXGI_FORMAT_AYUV(100),
        DXGI_FORMAT_Y410(101),
        DXGI_FORMAT_Y416(102),
        DXGI_FORMAT_NV12(103),
        DXGI_FORMAT_P010(104),
        DXGI_FORMAT_P016(105),
        DXGI_FORMAT_420_OPAQUE(106),
        DXGI_FORMAT_YUY2(107),
        DXGI_FORMAT_Y210(108),
        DXGI_FORMAT_Y216(109),
        DXGI_FORMAT_NV11(110),
        DXGI_FORMAT_AI44(111),
        DXGI_FORMAT_IA44(112),
        DXGI_FORMAT_P8(113),
        DXGI_FORMAT_A8P8(114),
        DXGI_FORMAT_B4G4R4A4_UNORM(115),

        DXGI_FORMAT_P208(130),
        DXGI_FORMAT_V208(131),
        DXGI_FORMAT_V408(132),
        DXGI_FORMAT_ASTC_4X4_TYPELESS(133),
        DXGI_FORMAT_ASTC_4X4_UNORM(134),
        DXGI_FORMAT_ASTC_4X4_UNORM_SRGB(135),
        DXGI_FORMAT_ASTC_5X4_TYPELESS(137),
        DXGI_FORMAT_ASTC_5X4_UNORM(138),
        DXGI_FORMAT_ASTC_5X4_UNORM_SRGB(139),
        DXGI_FORMAT_ASTC_5X5_TYPELESS(141),
        DXGI_FORMAT_ASTC_5X5_UNORM(142),
        DXGI_FORMAT_ASTC_5X5_UNORM_SRGB(143),
        DXGI_FORMAT_ASTC_6X5_TYPELESS(145),
        DXGI_FORMAT_ASTC_6X5_UNORM(146),
        DXGI_FORMAT_ASTC_6X5_UNORM_SRGB(147),
        DXGI_FORMAT_ASTC_6X6_TYPELESS(149),
        DXGI_FORMAT_ASTC_6X6_UNORM(150),
        DXGI_FORMAT_ASTC_6X6_UNORM_SRGB(151),
        DXGI_FORMAT_ASTC_8X5_TYPELESS(153),
        DXGI_FORMAT_ASTC_8X5_UNORM(154),
        DXGI_FORMAT_ASTC_8X5_UNORM_SRGB(155),
        DXGI_FORMAT_ASTC_8X6_TYPELESS(157),
        DXGI_FORMAT_ASTC_8X6_UNORM(158),
        DXGI_FORMAT_ASTC_8X6_UNORM_SRGB(159),
        DXGI_FORMAT_ASTC_8X8_TYPELESS(161),
        DXGI_FORMAT_ASTC_8X8_UNORM(162),
        DXGI_FORMAT_ASTC_8X8_UNORM_SRGB(163),
        DXGI_FORMAT_ASTC_10X5_TYPELESS(165),
        DXGI_FORMAT_ASTC_10X5_UNORM(166),
        DXGI_FORMAT_ASTC_10X5_UNORM_SRGB(167),
        DXGI_FORMAT_ASTC_10X6_TYPELESS(169),
        DXGI_FORMAT_ASTC_10X6_UNORM(170),
        DXGI_FORMAT_ASTC_10X6_UNORM_SRGB(171),
        DXGI_FORMAT_ASTC_10X8_TYPELESS(173),
        DXGI_FORMAT_ASTC_10X8_UNORM(174),
        DXGI_FORMAT_ASTC_10X8_UNORM_SRGB(175),
        DXGI_FORMAT_ASTC_10X10_TYPELESS(177),
        DXGI_FORMAT_ASTC_10X10_UNORM(178),
        DXGI_FORMAT_ASTC_10X10_UNORM_SRGB(179),
        DXGI_FORMAT_ASTC_12X10_TYPELESS(181),
        DXGI_FORMAT_ASTC_12X10_UNORM(182),
        DXGI_FORMAT_ASTC_12X10_UNORM_SRGB(183),
        DXGI_FORMAT_ASTC_12X12_TYPELESS(185),
        DXGI_FORMAT_ASTC_12X12_UNORM(186),
        DXGI_FORMAT_ASTC_12X12_UNORM_SRGB(187),

        DXGI_FORMAT_FORCE_UINT(0xffffffffL.toInt()) // BUG https://youtrack.jetbrains.com/issue/KT-4749
    }

    var c: Int = 0;

    enum class DxgiFormatGli() {

        DXGI_FORMAT_UNKNOWN_GLI,

        DXGI_FORMAT_R64_UINT_GLI,
        DXGI_FORMAT_R64_SINT_GLI,
        DXGI_FORMAT_R64_FLOAT_GLI,
        DXGI_FORMAT_R64G64_UINT_GLI,
        DXGI_FORMAT_R64G64_SINT_GLI,
        DXGI_FORMAT_R64G64_FLOAT_GLI,
        DXGI_FORMAT_R64G64B64_UINT_GLI,
        DXGI_FORMAT_R64G64B64_SINT_GLI,
        DXGI_FORMAT_R64G64B64_FLOAT_GLI,
        DXGI_FORMAT_R64G64B64A64_UINT_GLI,
        DXGI_FORMAT_R64G64B64A64_SINT_GLI,
        DXGI_FORMAT_R64G64B64A64_FLOAT_GLI,

        DXGI_FORMAT_RG4_UNORM_GLI,
        DXGI_FORMAT_RGBA4_UNORM_GLI,
        DXGI_FORMAT_R5G6B5_UNORM_GLI,
        DXGI_FORMAT_R5G5B5A1_UNORM_GLI,
        DXGI_FORMAT_A1B5G5R5_UNORM_GLI,

        DXGI_FORMAT_R8_SRGB_GLI,
        DXGI_FORMAT_R8_USCALED_GLI,
        DXGI_FORMAT_R8_SSCALED_GLI,

        DXGI_FORMAT_R8G8_SRGB_GLI,
        DXGI_FORMAT_R8G8_USCALED_GLI,
        DXGI_FORMAT_R8G8_SSCALED_GLI,

        DXGI_FORMAT_R8G8B8_UNORM_GLI,
        DXGI_FORMAT_R8G8B8_SNORM_GLI,
        DXGI_FORMAT_R8G8B8_USCALED_GLI,
        DXGI_FORMAT_R8G8B8_SSCALED_GLI,
        DXGI_FORMAT_R8G8B8_UINT_GLI,
        DXGI_FORMAT_R8G8B8_SINT_GLI,
        DXGI_FORMAT_R8G8B8_SRGB_GLI,

        DXGI_FORMAT_B8G8R8_UNORM_GLI,
        DXGI_FORMAT_B8G8R8_SNORM_GLI,
        DXGI_FORMAT_B8G8R8_USCALED_GLI,
        DXGI_FORMAT_B8G8R8_SSCALED_GLI,
        DXGI_FORMAT_B8G8R8_UINT_GLI,
        DXGI_FORMAT_B8G8R8_SINT_GLI,
        DXGI_FORMAT_B8G8R8_SRGB_GLI,

        DXGI_FORMAT_R8G8B8A8_USCALED_GLI,
        DXGI_FORMAT_R8G8B8A8_SSCALED_GLI,

        DXGI_FORMAT_B8G8R8A8_SNORM_GLI,
        DXGI_FORMAT_B8G8R8A8_USCALED_GLI,
        DXGI_FORMAT_B8G8R8A8_SSCALED_GLI,
        DXGI_FORMAT_B8G8R8A8_UINT_GLI,
        DXGI_FORMAT_B8G8R8A8_SINT_GLI,

        DXGI_FORMAT_R8G8B8A8_PACK_UNORM_GLI,
        DXGI_FORMAT_R8G8B8A8_PACK_SNORM_GLI,
        DXGI_FORMAT_R8G8B8A8_PACK_USCALED_GLI,
        DXGI_FORMAT_R8G8B8A8_PACK_SSCALED_GLI,
        DXGI_FORMAT_R8G8B8A8_PACK_UINT_GLI,
        DXGI_FORMAT_R8G8B8A8_PACK_SINT_GLI,
        DXGI_FORMAT_R8G8B8A8_PACK_SRGB_GLI,

        DXGI_FORMAT_R10G10B10A2_SNORM_GLI,
        DXGI_FORMAT_R10G10B10A2_USCALED_GLI,
        DXGI_FORMAT_R10G10B10A2_SSCALED_GLI,
        DXGI_FORMAT_R10G10B10A2_SINT_GLI,

        DXGI_FORMAT_B10G10R10A2_UNORM_GLI,
        DXGI_FORMAT_B10G10R10A2_SNORM_GLI,
        DXGI_FORMAT_B10G10R10A2_USCALED_GLI,
        DXGI_FORMAT_B10G10R10A2_SSCALED_GLI,
        DXGI_FORMAT_B10G10R10A2_UINT_GLI,
        DXGI_FORMAT_B10G10R10A2_SINT_GLI,

        DXGI_FORMAT_R16_USCALED_GLI,
        DXGI_FORMAT_R16_SSCALED_GLI,
        DXGI_FORMAT_R16G16_USCALED_GLI,
        DXGI_FORMAT_R16G16_SSCALED_GLI,

        DXGI_FORMAT_R16G16B16_UNORM_GLI,
        DXGI_FORMAT_R16G16B16_SNORM_GLI,
        DXGI_FORMAT_R16G16B16_USCALED_GLI,
        DXGI_FORMAT_R16G16B16_SSCALED_GLI,
        DXGI_FORMAT_R16G16B16_UINT_GLI,
        DXGI_FORMAT_R16G16B16_SINT_GLI,
        DXGI_FORMAT_R16G16B16_FLOAT_GLI,

        DXGI_FORMAT_R16G16B16A16_USCALED_GLI,
        DXGI_FORMAT_R16G16B16A16_SSCALED_GLI,

        DXGI_FORMAT_S8_UINT_GLI,
        DXGI_FORMAT_D16_UNORM_S8_UINT_GLI,
        DXGI_FORMAT_D24_UNORM_GLI,

        DXGI_FORMAT_L8_UNORM_GLI,
        DXGI_FORMAT_A8_UNORM_GLI,
        DXGI_FORMAT_LA8_UNORM_GLI,
        DXGI_FORMAT_L16_UNORM_GLI,
        DXGI_FORMAT_A16_UNORM_GLI,
        DXGI_FORMAT_LA16_UNORM_GLI,

        DXGI_FORMAT_R3G3B2_UNORM_GLI,

        DXGI_FORMAT_BC1_RGB_UNORM_GLI,
        DXGI_FORMAT_BC1_RGB_SRGB_GLI,
        DXGI_FORMAT_RGB_ETC2_UNORM_GLI,
        DXGI_FORMAT_RGB_ETC2_SRGB_GLI,
        DXGI_FORMAT_RGBA_ETC2_A1_UNORM_GLI,
        DXGI_FORMAT_RGBA_ETC2_A1_SRGB_GLI,
        DXGI_FORMAT_RGBA_ETC2_UNORM_GLI,
        DXGI_FORMAT_RGBA_ETC2_SRGB_GLI,
        DXGI_FORMAT_R11_EAC_UNORM_GLI,
        DXGI_FORMAT_R11_EAC_SNORM_GLI,
        DXGI_FORMAT_RG11_EAC_UNORM_GLI,
        DXGI_FORMAT_RG11_EAC_SNORM_GLI,

        DXGI_FORMAT_RGB_PVRTC1_8X8_UNORM_GLI,
        DXGI_FORMAT_RGB_PVRTC1_8X8_SRGB_GLI,
        DXGI_FORMAT_RGB_PVRTC1_16X8_UNORM_GLI,
        DXGI_FORMAT_RGB_PVRTC1_16X8_SRGB_GLI,
        DXGI_FORMAT_RGBA_PVRTC1_8X8_UNORM_GLI,
        DXGI_FORMAT_RGBA_PVRTC1_8X8_SRGB_GLI,
        DXGI_FORMAT_RGBA_PVRTC1_16X8_UNORM_GLI,
        DXGI_FORMAT_RGBA_PVRTC1_16X8_SRGB_GLI,
        DXGI_FORMAT_RGBA_PVRTC2_8X8_UNORM_GLI,
        DXGI_FORMAT_RGBA_PVRTC2_8X8_SRGB_GLI,
        DXGI_FORMAT_RGBA_PVRTC2_16X8_UNORM_GLI,
        DXGI_FORMAT_RGBA_PVRTC2_16X8_SRGB_GLI,

        DXGI_FORMAT_RGB_ETC_UNORM_GLI,
        DXGI_FORMAT_RGB_ATC_UNORM_GLI,
        DXGI_FORMAT_RGBA_ATCA_UNORM_GLI,
        DXGI_FORMAT_RGBA_ATCI_UNORM_GLI;

        val i = ordinal
    }

    class DxgiFormat {

        var dds: DxgiFormatDds = DXGI_FORMAT_UNKNOWN
        var gli: DxgiFormatGli = DXGI_FORMAT_UNKNOWN_GLI

        constructor(dds: DxgiFormatDds) {
            this.dds = dds
        }

        constructor(gli: DxgiFormatGli) {
            this.gli = gli
        }
    }

    class Format(val ddPixelFormat: Ddpf, val d3DFormat: D3dfmt, val DxgiFormat: DxgiFormat, val mask: Vec4i)

    enum class Ddpf(val i: Int) {
        DDPF_ALPHAPIXELS(0x1),
        DDPF_ALPHA(0x2),
        DDPF_FOURCC(0x4),
        DDPF_RGB(0x40),
        DDPF_YUV(0x200),
        DDPF_LUMINANCE(0x20000),
        DDPF_LUMINANCE_ALPHA(DDPF_LUMINANCE.i or DDPF_ALPHA.i),
        DDPF_RGBAPIXELS(DDPF_RGB.i or DDPF_ALPHAPIXELS.i),
        DDPF_RGBA(DDPF_RGB.i or DDPF_ALPHA.i),
        DDPF_LUMINANCE_ALPHAPIXELS(DDPF_LUMINANCE.i or DDPF_ALPHAPIXELS.i);

        infix fun and(other: Ddpf) = i and other.i
        infix fun has(other: Ddpf) = (this and other) != 0
    }

    /**
     * Convert GLI formats into Direct3D formats
     */
    fun translate(format: gli.Format): dx.Format {
        assert(format >= gli.Format.FORMAT_FIRST && format <= gli.Format.FORMAT_LAST)
        return table[format - gli.Format.FORMAT_FIRST]
    }

    /**
     * Convert a Direct3D 9 format into a GLI format
     */
    fun find(fourCC: dx.D3dfmt): gli.Format {

        var formatResult = gli.Format.FORMAT_INVALID

        for (format in gli.Format.FORMAT_FIRST..gli.Format.FORMAT_LAST) {

            if (table[format - gli.Format.FORMAT_FIRST].d3DFormat.i != fourCC.i) continue

            formatResult = gli.Format.values().first { it.i == format.i }
            break
        }
        return formatResult
    }

    /**
     * Convert a Direct3D 10 format into a GLI format
     */
    fun find(fourCC: D3dfmt, format: DxgiFormat): gli.Format {

        assert(fourCC.i == D3DFMT_DX10.i || fourCC.i == D3DFMT_GLI1.i)

        var formatResult = gli.Format.FORMAT_INVALID
        for (formatIndex in gli.Format.FORMAT_FIRST..gli.Format.FORMAT_LAST) {

            val formatInfo = formatIndex.getFormatInfo()

            val dxFormat = table[formatIndex - gli.Format.FORMAT_FIRST]

            if (fourCC.i == D3DFMT_GLI1.i && (formatInfo.flags has gli.Cap.CAP_DDS_GLI_EXT_BIT) && dxFormat.DxgiFormat.gli == format.gli) {

                formatResult = gli.Format.values().first { it.i == formatIndex.i }
                break
            }

            if (fourCC.i == D3DFMT_DX10.i && (formatInfo.flags has gli.Cap.CAP_DDS_GLI_EXT_BIT) && dxFormat.DxgiFormat.dds == format.dds) {

                formatResult = gli.Format.values().first { it.i == formatIndex.i }
                break
            }
        }
        return formatResult
    }

    /**
     * Evaluate whether a target and format combinaison is only supported by the DDS container through GLI DDS extension.
     */
    fun isDdsExt(target: gli.Target, format: gli.Format): Boolean {

        val dxFormat = translate(format)

        val useDdsExt = format.getFormatInfo().flags has gli.Cap.CAP_DDS_GLI_EXT_BIT

        return ((dxFormat.ddPixelFormat has DDPF_FOURCC) && dxFormat.d3DFormat == D3DFMT_GLI1) || ((target.isTargetArray() || target.isTarget1d()) && useDdsExt)
    }

    companion object {

        val table: Array<Format> by lazy {
            val t = arrayOf(
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RG4_UNORM_GLI), Vec4i(0x000F, 0x00F0, 0x0000, 0x0000)),
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA4_UNORM_GLI), Vec4i(0x000F, 0x00F0, 0x0F00, 0xF000)), //FORMAT_RGBA4_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_A4R4G4B4, DxgiFormat(DXGI_FORMAT_B4G4R4A4_UNORM), Vec4i(0x0F00, 0x00F0, 0x000F, 0xF000)), //FORMAT_BGRA4_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R5G6B5_UNORM_GLI), Vec4i(0x001f, 0x07e0, 0xf800, 0x0000)), //FORMAT_R5G6B5_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_R5G6B5, DxgiFormat(DXGI_FORMAT_B5G6R5_UNORM), Vec4i(0xf800, 0x07e0, 0x001f, 0x0000)), //FORMAT_B5G6R5_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R5G5B5A1_UNORM_GLI), Vec4i(0x001f, 0x03e0, 0x7c00, 0x8000)), //FORMAT_RGB5A1_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_A1R5G5B5, DxgiFormat(DXGI_FORMAT_B5G5R5A1_UNORM), Vec4i(0x7c00, 0x03e0, 0x001f, 0x8000)), //FORMAT_BGR5A1_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_A1B5G5R5_UNORM_GLI), Vec4i(0x7c00, 0x03e0, 0x001f, 0x8000)), //FORMAT_A1RGB5_UNORM,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8_UNORM), Vec4i(0x00FF0000, 0x00000000, 0x00000000, 0x00000000)), //FORMAT_R8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8_SNORM), Vec4i(0)), //FORMAT_R8_SNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8_USCALED_GLI), Vec4i(0x00FF0000, 0x00000000, 0x00000000, 0x00000000)), //FORMAT_R8_USCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8_SSCALED_GLI), Vec4i(0)), //FORMAT_R8_SSCALED,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8_UINT), Vec4i(0)), //FORMAT_R8_UINT,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8_SINT), Vec4i(0)), //FORMAT_R8_SINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8_SRGB_GLI), Vec4i(0)), //FORMAT_R8_SRGB,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8_UNORM), Vec4i(0x00FF0000, 0x0000FF00, 0x00000000, 0x00000000)), //FORMAT_RG8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8_SNORM), Vec4i(0)), //FORMAT_RG8_SNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8_USCALED_GLI), Vec4i(0x00FF0000, 0x0000FF00, 0x00000000, 0x00000000)), //FORMAT_RG8_USCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8_SSCALED_GLI), Vec4i(0)), //FORMAT_RG8_SSCALED,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8_UINT), Vec4i(0)), //FORMAT_RG8_UINT,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8_SINT), Vec4i(0)), //FORMAT_RG8_SINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8_SRGB_GLI), Vec4i(0)), //FORMAT_RG8_SRGB,

                    Format(DDPF_RGB, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8_UNORM_GLI), Vec4i(0x000000FF, 0x0000FF00, 0x00FF0000, 0x00000000)), //FORMAT_RGB8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8_SNORM_GLI), Vec4i(0)), //FORMAT_RGB8_SNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8_USCALED_GLI), Vec4i(0)), //FORMAT_RGB8_USCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8_SSCALED_GLI), Vec4i(0)), //FORMAT_RGB8_SSCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8_UINT_GLI), Vec4i(0)), //FORMAT_RGB8_UINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8_SINT_GLI), Vec4i(0)), //FORMAT_RGB8_SINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8_SRGB_GLI), Vec4i(0)), //FORMAT_RGB8_SRGB,

                    Format(DDPF_RGB, D3DFMT_R8G8B8, DxgiFormat(DXGI_FORMAT_B8G8R8_UNORM_GLI), Vec4i(0x00FF0000, 0x0000FF00, 0x000000FF, 0x00000000)), //FORMAT_BGR8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8_SNORM_GLI), Vec4i(0)), //FORMAT_BGR8_SNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8_USCALED_GLI), Vec4i(0)), //FORMAT_BGR8_USCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8_SSCALED_GLI), Vec4i(0)), //FORMAT_BGR8_SSCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8_UINT_GLI), Vec4i(0)), //FORMAT_BGR8_UINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8_SINT_GLI), Vec4i(0)), //FORMAT_BGR8_SINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8_SRGB_GLI), Vec4i(0)), //FORMAT_BGR8_SRGB,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8B8A8_UNORM), Vec4i(0x000000FF, 0x0000FF00, 0x00FF0000, 0xFF000000.toInt())), //FORMAT_RGBA8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8B8A8_SNORM), Vec4i(0)), //FORMAT_RGBA8_SNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_USCALED_GLI), Vec4i(0)), //FORMAT_RGBA8_USCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_SSCALED_GLI), Vec4i(0)), //FORMAT_RGBA8_SSCALED,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8B8A8_UINT), Vec4i(0)), //FORMAT_RGBA8_UINT,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8B8A8_SINT), Vec4i(0)), //FORMAT_RGBA8_SINT,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R8G8B8A8_UNORM_SRGB), Vec4i(0)), //FORMAT_RGBA8_SRGB,

                    Format(DDPF_FOURCC, D3DFMT_A8R8G8B8, DxgiFormat(DXGI_FORMAT_B8G8R8A8_UNORM), Vec4i(0x00FF0000, 0x0000FF00, 0x000000FF, 0xFF000000.toInt())), //FORMAT_BGRA8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8A8_SNORM_GLI), Vec4i(0)), //FORMAT_BGRA8_SNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8A8_USCALED_GLI), Vec4i(0)), //FORMAT_BGRA8_USCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8A8_SSCALED_GLI), Vec4i(0)), //FORMAT_BGRA8_SSCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8A8_UINT_GLI), Vec4i(0)), //FORMAT_BGRA8_UINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B8G8R8A8_SINT_GLI), Vec4i(0)), //FORMAT_BGRA8_SINT,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_B8G8R8A8_UNORM_SRGB), Vec4i(0x00FF0000, 0x0000FF00, 0x000000FF, 0xFF000000.toInt())), //FORMAT_BGRA8_SRGB,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_PACK_UNORM_GLI), Vec4i(0x00FF0000, 0x0000FF00, 0x000000FF, 0xFF000000.toInt())), //FORMAT_ABGR8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_PACK_SNORM_GLI), Vec4i(0)), //FORMAT_ABGR8_SNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_PACK_USCALED_GLI), Vec4i(0)), //FORMAT_ABGR8_USCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_PACK_SSCALED_GLI), Vec4i(0)), //FORMAT_ABGR8_SSCALED,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_PACK_UINT_GLI), Vec4i(0)), //FORMAT_ABGR8_UINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_PACK_SINT_GLI), Vec4i(0)), //FORMAT_ABGR8_SINT,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R8G8B8A8_PACK_SRGB_GLI), Vec4i(0x00FF0000, 0x0000FF00, 0x000000FF, 0xFF000000.toInt())), //FORMAT_ABGR8_SRGB,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R10G10B10A2_UNORM), Vec4i(0x000003FF, 0x000FFC00, 0x3FF00000, 0xC0000000.toInt())), //FORMAT_RGB10A2_UNORM_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R10G10B10A2_SNORM_GLI), Vec4i(0x000003FF, 0x000FFC00, 0x3FF00000, 0xC0000000.toInt())), //FORMAT_RGB10A2_SNORM_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R10G10B10A2_USCALED_GLI), Vec4i(0x000003FF, 0x000FFC00, 0x3FF00000, 0xC0000000.toInt())), //FORMAT_RGB10A2_USCALED_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R10G10B10A2_SSCALED_GLI), Vec4i(0x000003FF, 0x000FFC00, 0x3FF00000, 0xC0000000.toInt())), //FORMAT_RGB10A2_SSCALED_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R10G10B10A2_UINT), Vec4i(0x000003FF, 0x000FFC00, 0x3FF00000, 0xC0000000.toInt())), //FORMAT_RGB10A2_UINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R10G10B10A2_SINT_GLI), Vec4i(0x000003FF, 0x000FFC00, 0x3FF00000, 0xC0000000.toInt())), //FORMAT_RGB10A2_SINT_PACK32,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B10G10R10A2_UNORM_GLI), Vec4i(0x3FF00000, 0x000FFC00, 0x000003FF, 0xC0000000.toInt())), //FORMAT_BGR10A2_UNORM_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B10G10R10A2_SNORM_GLI), Vec4i(0x3FF00000, 0x000FFC00, 0x000003FF, 0xC0000000.toInt())), //FORMAT_BGR10A2_SNORM_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B10G10R10A2_USCALED_GLI), Vec4i(0x3FF00000, 0x000FFC00, 0x000003FF, 0xC0000000.toInt())), //FORMAT_BGR10A2_USCALED_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B10G10R10A2_SSCALED_GLI), Vec4i(0x3FF00000, 0x000FFC00, 0x000003FF, 0xC0000000.toInt())), //FORMAT_BGR10A2_SSCALED_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B10G10R10A2_UINT_GLI), Vec4i(0x3FF00000, 0x000FFC00, 0x000003FF, 0xC0000000.toInt())), //FORMAT_BGR10A2_UINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_B10G10R10A2_SINT_GLI), Vec4i(0x3FF00000, 0x000FFC00, 0x000003FF, 0xC0000000.toInt())), //FORMAT_BGR10A2_SINT_PACK32,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16_UNORM), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0x00000000)), //FORMAT_R16_UNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16_SNORM), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0x00000000)), //FORMAT_R16_SNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16_USCALED_GLI), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0x00000000)), //FORMAT_R16_USCALED_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16_SSCALED_GLI), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0x00000000)), //FORMAT_R16_SSCALED_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16_UINT), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0x0000000)), //FORMAT_R16_UINT_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16_SINT), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0x0000000)), //FORMAT_R16_SINT_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_R16F, DxgiFormat(DXGI_FORMAT_R16_FLOAT), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0x0000000)), //FORMAT_R16_SFLOAT_PACK16,

                    Format(DDPF_FOURCC, D3DFMT_G16R16, DxgiFormat(DXGI_FORMAT_R16G16_UNORM), Vec4i(0x0000FFFF, 0xFFFF0000.toInt(), 0x00000000, 0x00000000)), //FORMAT_RG16_UNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16G16_SNORM), Vec4i(0x0000FFFF, 0xFFFF0000.toInt(), 0x00000000, 0x00000000)), //FORMAT_RG16_SNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16_USCALED_GLI), Vec4i(0x0000FFFF, 0xFFFF0000.toInt(), 0x00000000, 0x00000000)), //FORMAT_RG16_USCALED_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16_SSCALED_GLI), Vec4i(0x0000FFFF, 0xFFFF0000.toInt(), 0x00000000, 0x00000000)), //FORMAT_RG16_SSCALED_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16G16_UINT), Vec4i(0x0000FFFF, 0xFFFF0000.toInt(), 0x00000000, 0x00000000)), //FORMAT_RG16_UINT_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16G16_SINT), Vec4i(0x0000FFFF, 0xFFFF0000.toInt(), 0x00000000, 0x00000000)), //FORMAT_RG16_SINT_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_G16R16F, DxgiFormat(DXGI_FORMAT_R16G16_FLOAT), Vec4i(0x0000FFFF, 0xFFFF0000.toInt(), 0x00000000, 0x00000000)), //FORMAT_RG16_SFLOAT_PACK16,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16_UNORM_GLI), Vec4i(0)), //FORMAT_RGB16_UNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16_SNORM_GLI), Vec4i(0)), //FORMAT_RGB16_SNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16_USCALED_GLI), Vec4i(0)), //FORMAT_RGB16_USCALED_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16_SSCALED_GLI), Vec4i(0)), //FORMAT_RGB16_SSCALED_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16_UINT_GLI), Vec4i(0)), //FORMAT_RGB16_UINT_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16_SINT_GLI), Vec4i(0)), //FORMAT_RGB16_SINT_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16_FLOAT_GLI), Vec4i(0)), //FORMAT_RGB16_SFLOAT_PACK16,

                    Format(DDPF_FOURCC, D3DFMT_A16B16G16R16, DxgiFormat(DXGI_FORMAT_R16G16B16A16_UNORM), Vec4i(0)), //FORMAT_RGBA16_UNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16G16B16A16_SNORM), Vec4i(0)), //FORMAT_RGBA16_SNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16A16_USCALED_GLI), Vec4i(0)), //FORMAT_RGBA16_USCALED_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R16G16B16A16_SSCALED_GLI), Vec4i(0)), //FORMAT_RGBA16_SSCALED_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16G16B16A16_UINT), Vec4i(0)), //FORMAT_RGBA16_UINT_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R16G16B16A16_SINT), Vec4i(0)), //FORMAT_RGBA16_SINT_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_A16B16G16R16F, DxgiFormat(DXGI_FORMAT_R16G16B16A16_FLOAT), Vec4i(0)), //FORMAT_RGBA16_SFLOAT_PACK16,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32_UINT), Vec4i(0)), //FORMAT_R32_UINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32_SINT), Vec4i(0)), //FORMAT_R32_SINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_R32F, DxgiFormat(DXGI_FORMAT_R32_FLOAT), Vec4i(0xFFFFFFFF.toInt(), 0x0000000, 0x0000000, 0x0000000)), //FORMAT_R32_SFLOAT_PACK32,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32G32_UINT), Vec4i(0)), //FORMAT_RG32_UINT_PACK32
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32G32_SINT), Vec4i(0)), //FORMAT_RG32_SINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_G32R32F, DxgiFormat(DXGI_FORMAT_R32G32_FLOAT), Vec4i(0)), //FORMAT_RG32_SFLOAT_PACK32,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32G32B32_UINT), Vec4i(0)), //FORMAT_RGB32_UINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32G32B32_SINT), Vec4i(0)), //FORMAT_RGB32_SINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32G32B32_FLOAT), Vec4i(0)), //FORMAT_RGB32_SFLOAT_PACK32,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32G32B32A32_UINT), Vec4i(0)), //FORMAT_RGBA32_UINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R32G32B32A32_SINT), Vec4i(0)), //FORMAT_RGBA32_SINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_A32B32G32R32F, DxgiFormat(DXGI_FORMAT_R32G32B32A32_FLOAT), Vec4i(0)), //FORMAT_RGBA32_SFLOAT_PACK32,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64_UINT_GLI), Vec4i(0)), //FORMAT_R64_UINT_PACK64,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64_SINT_GLI), Vec4i(0)), //FORMAT_R64_SINT_PACK64,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64_FLOAT_GLI), Vec4i(0)), //FORMAT_R64_SFLOAT_PACK64,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64_UINT_GLI), Vec4i(0)), //FORMAT_RG64_UINT_PACK64,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64_SINT_GLI), Vec4i(0)), //FORMAT_RG64_SINT_PACK64,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64_FLOAT_GLI), Vec4i(0)), //FORMAT_RG64_SFLOAT_PACK64,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64B64_UINT_GLI), Vec4i(0)), //FORMAT_RGB64_UINT_PACK64,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64B64_SINT_GLI), Vec4i(0)), //FORMAT_RGB64_SINT_PACK64,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64B64_FLOAT_GLI), Vec4i(0)), //FORMAT_RGB64_SFLOAT_PACK64,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64B64A64_UINT_GLI), Vec4i(0)), //FORMAT_RGBA64_UINT_PACK64,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64B64A64_SINT_GLI), Vec4i(0)), //FORMAT_RGBA64_SINT_PACK64,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R64G64B64A64_FLOAT_GLI), Vec4i(0)), //FORMAT_RGBA64_SFLOAT_PACK64,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R11G11B10_FLOAT), Vec4i(0)), //FORMAT_RG11B10_UFLOAT,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_R9G9B9E5_SHAREDEXP), Vec4i(0)), //FORMAT_RGB9E5_UFLOAT,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_D16_UNORM), Vec4i(0)), //FORMAT_D16_UNORM_PACK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_D24_UNORM_GLI), Vec4i(0)), //FORMAT_D24_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_D32_FLOAT), Vec4i(0)), //FORMAT_D32_SFLOAT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_S8_UINT_GLI), Vec4i(0)), //FORMAT_S8_UINT_PACK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_D16_UNORM_S8_UINT_GLI), Vec4i(0)), //FORMAT_D16_UNORM_S8_UINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_D24_UNORM_S8_UINT), Vec4i(0)), //FORMAT_D24_UNORM_S8_UINT_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_D32_FLOAT_S8X24_UINT), Vec4i(0)), //FORMAT_D32_SFLOAT_S8_UINT_PACK64,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_BC1_RGB_UNORM_GLI), Vec4i(0)), //FORMAT_RGB_DXT1_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_BC1_RGB_SRGB_GLI), Vec4i(0)), //FORMAT_RGB_DXT1_SRGB_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_DXT1, DxgiFormat(DXGI_FORMAT_BC1_UNORM), Vec4i(0)), //FORMAT_RGBA_DXT1_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_BC1_UNORM_SRGB), Vec4i(0)), //FORMAT_RGBA_DXT1_SRGB_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_DXT3, DxgiFormat(DXGI_FORMAT_BC2_UNORM), Vec4i(0)), //FORMAT_RGBA_DXT3_UNORM_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_BC2_UNORM_SRGB), Vec4i(0)), //FORMAT_RGBA_DXT3_SRGB_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_DXT5, DxgiFormat(DXGI_FORMAT_BC3_UNORM), Vec4i(0)), //FORMAT_RGBA_DXT5_UNORM_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_BC3_UNORM_SRGB), Vec4i(0)), //FORMAT_RGBA_DXT5_SRGB_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_ATI1, DxgiFormat(DXGI_FORMAT_BC4_UNORM), Vec4i(0)), //FORMAT_R_ATI1N_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_AT1N, DxgiFormat(DXGI_FORMAT_BC4_SNORM), Vec4i(0)), //FORMAT_R_ATI1N_SNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_ATI2, DxgiFormat(DXGI_FORMAT_BC5_UNORM), Vec4i(0)), //FORMAT_RG_ATI2N_UNORM_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_AT2N, DxgiFormat(DXGI_FORMAT_BC5_SNORM), Vec4i(0)), //FORMAT_RG_ATI2N_SNORM_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_BC6H_UF16), Vec4i(0)), //FORMAT_RGB_BP_UFLOAT_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_BC6H_SF16), Vec4i(0)), //FORMAT_RGB_BP_SFLOAT_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_BC7_UNORM), Vec4i(0)), //FORMAT_RGB_BP_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_BC7_UNORM_SRGB), Vec4i(0)), //FORMAT_RGB_BP_SRGB,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGB_ETC2_UNORM_GLI), Vec4i(0)), //FORMAT_RGB_ETC2_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGB_ETC2_SRGB_GLI), Vec4i(0)), //FORMAT_RGB_ETC2_SRGB_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_ETC2_A1_UNORM_GLI), Vec4i(0)), //FORMAT_RGBA_ETC2_A1_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_ETC2_A1_SRGB_GLI), Vec4i(0)), //FORMAT_RGBA_ETC2_A1_SRGB_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_ETC2_UNORM_GLI), Vec4i(0)), //FORMAT_RGBA_ETC2_UNORM_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_ETC2_SRGB_GLI), Vec4i(0)), //FORMAT_RGBA_ETC2_SRGB_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R11_EAC_UNORM_GLI), Vec4i(0)), //FORMAT_R_EAC_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R11_EAC_SNORM_GLI), Vec4i(0)), //FORMAT_R_EAC_SNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RG11_EAC_UNORM_GLI), Vec4i(0)), //FORMAT_RG_EAC_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RG11_EAC_SNORM_GLI), Vec4i(0)), //FORMAT_RG_EAC_SNORM_BLOCK8,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_4X4_UNORM), Vec4i(0)), //FORMAT_ASTC_4x4_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_4X4_UNORM_SRGB), Vec4i(0)), //FORMAT_ASTC_4x4_SRGB,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_5X4_UNORM), Vec4i(0)), //RGBA_ASTC_5x4,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_5X4_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_5x4,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_5X5_UNORM), Vec4i(0)), //RGBA_ASTC_5x5,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_5X5_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_5x5,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_6X5_UNORM), Vec4i(0)), //RGBA_ASTC_6x5,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_6X5_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_6x5,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_6X6_UNORM), Vec4i(0)), //RGBA_ASTC_6x6,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_6X6_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_6x6,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_8X5_UNORM), Vec4i(0)), //RGBA_ASTC_8x5,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_8X5_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_8x5,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_8X6_UNORM), Vec4i(0)), //RGBA_ASTC_8x6,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_8X6_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_8x6,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_8X8_UNORM), Vec4i(0)), //RGBA_ASTC_8x8,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_8X8_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_8x8,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_10X5_UNORM), Vec4i(0)), //RGBA_ASTC_10x5,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_10X5_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_10x5,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_10X6_UNORM), Vec4i(0)), //RGBA_ASTC_10x6,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_10X6_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_10x6,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_10X8_UNORM), Vec4i(0)), //RGBA_ASTC_10x8,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_10X8_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_10x8,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_10X10_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_10x10,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_10X10_UNORM), Vec4i(0)), //RGBA_ASTC_10x10,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_12X10_UNORM), Vec4i(0)), //RGBA_ASTC_12x10,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_12X10_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_12x10,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_12X12_UNORM), Vec4i(0)), //RGBA_ASTC_12x12,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_ASTC_12X12_UNORM_SRGB), Vec4i(0)), //SRGB_ALPHA_ASTC_12x12,

                    Format(DDPF_FOURCC, D3DFMT_POWERVR_4BPP, DxgiFormat(DXGI_FORMAT_RGB_PVRTC1_8X8_UNORM_GLI), Vec4i(0)), //FORMAT_RGB_PVRTC1_8X8_UNORM_BLOCK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGB_PVRTC1_8X8_SRGB_GLI), Vec4i(0)), //FORMAT_RGB_PVRTC1_8X8_SRGB_BLOCK32,
                    Format(DDPF_FOURCC, D3DFMT_POWERVR_2BPP, DxgiFormat(DXGI_FORMAT_RGB_PVRTC1_16X8_UNORM_GLI), Vec4i(0)), //FORMAT_RGB_PVRTC1_16X8_UNORM_BLOCK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGB_PVRTC1_16X8_SRGB_GLI), Vec4i(0)), //FORMAT_RGB_PVRTC1_16X8_SRGB_BLOCK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_PVRTC1_8X8_UNORM_GLI), Vec4i(0)), //FORMAT_RGBA_PVRTC1_8X8_UNORM_BLOCK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_PVRTC1_8X8_SRGB_GLI), Vec4i(0)), //FORMAT_RGBA_PVRTC1_8X8_SRGB_BLOCK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_PVRTC1_16X8_UNORM_GLI), Vec4i(0)), //FORMAT_RGBA_PVRTC1_16X8_UNORM_BLOCK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_PVRTC1_16X8_SRGB_GLI), Vec4i(0)), //FORMAT_RGBA_PVRTC1_16X8_SRGB_BLOCK32,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_PVRTC2_8X8_UNORM_GLI), Vec4i(0)), //FORMAT_RGBA_PVRTC2_8X8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_PVRTC2_8X8_SRGB_GLI), Vec4i(0)), //FORMAT_RGBA_PVRTC2_8X8_SRGB,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_PVRTC2_16X8_UNORM_GLI), Vec4i(0)), //FORMAT_RGBA_PVRTC2_16X8_UNORM,
                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_RGBA_PVRTC2_16X8_SRGB_GLI), Vec4i(0)), //FORMAT_RGBA_PVRTC2_16X8_SRGB,

                    Format(DDPF_FOURCC, D3DFMT_ETC, DxgiFormat(DXGI_FORMAT_RGB_ETC_UNORM_GLI), Vec4i(0)), //FORMAT_RGB_ETC_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_ATC, DxgiFormat(DXGI_FORMAT_RGB_ATC_UNORM_GLI), Vec4i(0)), //FORMAT_RGB_ATC_UNORM_BLOCK8,
                    Format(DDPF_FOURCC, D3DFMT_ATCA, DxgiFormat(DXGI_FORMAT_RGBA_ATCA_UNORM_GLI), Vec4i(0)), //FORMAT_RGBA_ATCA_UNORM_BLOCK16,
                    Format(DDPF_FOURCC, D3DFMT_ATCI, DxgiFormat(DXGI_FORMAT_RGBA_ATCI_UNORM_GLI), Vec4i(0)), //FORMAT_RGBA_ATCI_UNORM_BLOCK16,

                    Format(DDPF_LUMINANCE, D3DFMT_L8, DxgiFormat(DXGI_FORMAT_L8_UNORM_GLI), Vec4i(0x000000FF, 0x00000000, 0x00000000, 0x00000000)), //L8_UNORM,
                    Format(DDPF_ALPHA, D3DFMT_A8, DxgiFormat(DXGI_FORMAT_A8_UNORM_GLI), Vec4i(0x00000000, 0x00000000, 0x00000000, 0x000000FF)), //A8_UNORM,
                    Format(DDPF_LUMINANCE_ALPHA, D3DFMT_A8L8, DxgiFormat(DXGI_FORMAT_LA8_UNORM_GLI), Vec4i(0x000000FF, 0x00000000, 0x00000000, 0x0000FF00)), //LA8_UNORM,
                    Format(DDPF_LUMINANCE, D3DFMT_L16, DxgiFormat(DXGI_FORMAT_L16_UNORM_GLI), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0x00000000)), //L16_UNORM,
                    Format(DDPF_ALPHA, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_A16_UNORM_GLI), Vec4i(0x00000000, 0x00000000, 0x00000000, 0x0000FFFF)), //A16_UNORM,
                    Format(DDPF_LUMINANCE_ALPHA, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_LA16_UNORM_GLI), Vec4i(0x0000FFFF, 0x00000000, 0x00000000, 0xFFFF0000.toInt())), //LA16_UNORM,

                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_B8G8R8X8_UNORM), Vec4i(0x00FF0000, 0x0000FF00, 0x000000FF, 0x00000000)), //FORMAT_BGR8_UNORM_PACK32,
                    Format(DDPF_FOURCC, D3DFMT_DX10, DxgiFormat(DXGI_FORMAT_B8G8R8X8_UNORM_SRGB), Vec4i(0x00FF0000, 0x0000FF00, 0x000000FF, 0x00000000)), //FORMAT_BGR8_SRGB_PACK32,

                    Format(DDPF_FOURCC, D3DFMT_GLI1, DxgiFormat(DXGI_FORMAT_R3G3B2_UNORM_GLI), Vec4i(0x70, 0x38, 0xC0, 0x00))
            )
            assert(t.size == gli.Format.FORMAT_COUNT, { error("GLI error: format descriptor list doesn't match number of supported formats") })
            t
        }
    }
}

